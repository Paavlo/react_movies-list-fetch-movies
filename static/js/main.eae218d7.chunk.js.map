{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addedMovie","useState","getMovie","htmlFor","type","id","placeholder","ClassNames","undefined","onClick","document","getElementById","value","fetch","then","response","json","result","Response","Title","Plot","Poster","imdbID","App","data","addMovie","errorMessage","toMessage","newMovie","find","setTimeout","ReactDOM","render"],"mappings":"+wEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,gBCH3BG,G,MAAY,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACjBC,mBAAS,MADQ,mBACpCL,EADoC,KAC7BM,EAD6B,KAG3C,OACE,oCACE,0BAAMb,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQc,QAAQ,eAAjC,eAIA,yBAAKd,UAAU,WACb,2BACEe,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZjB,UAAWkB,IACT,QACA,CAAE,kBAAwBC,IAAVZ,YAOVY,IAAVZ,GAEE,uBAAGP,UAAU,kBAAb,yCAQN,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEe,KAAK,SACLf,UAAU,kBACVoB,QAAS,WC9CE,IAAAxB,KD+CCyB,SAASC,eAAe,eAAeC,MC/C/BC,MAAM,GAAD,OAFvB,+CAEuB,OAAc5B,IAClD6B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WD+CVF,MAAK,SAACG,GACe,UAApBA,EAAOC,SACHhB,EACA,CACEjB,MAAOgC,EAAOE,MACdjC,YAAa+B,EAAOG,KACpBjC,OAAQ8B,EAAOI,OACfjC,QAAQ,8BAAD,OACuB6B,EAAOK,OAD9B,KAEPxB,OAAQmB,EAAOK,SAGjBpB,OAASM,QAjBrB,iBAyBF,yBAAKnB,UAAU,WACb,4BACEe,KAAK,SACLf,UAAU,oBACVoB,QAAS,WACPT,EAAWJ,KAJf,uBAcHA,GAEC,yBAAKP,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAcO,O,OEnFd2B,EAAM,WAAO,IAAD,EACItB,mBAASuB,GADb,mBAChB9B,EADgB,KACR+B,EADQ,OAEWxB,oBAAS,GAFpB,mBAEhByB,EAFgB,KAEFC,EAFE,KAwBvB,OACE,yBAAKtC,UAAU,SAEVqC,GAEC,0BAAMrC,UAAU,SAAhB,sCAGJ,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,WAhCE,SAAC4B,GAClB,GAAKA,EAIL,OAAIlC,EAAOmC,MAAK,SAAAjC,GAAK,OAAIA,EAAME,SAAW8B,EAAS9B,WACjD6B,GAAU,QACVG,YAAW,WACTH,GAAU,KACT,WAKLF,EAAS,GAAD,mBACH/B,GADG,CAENkC,WCrBNG,IAASC,OAAO,kBAAC,EAAD,MAAStB,SAASC,eAAe,W","file":"static/js/main.eae218d7.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { findMovie } from '../../api/api';\n\nexport const FindMovie = ({ addedMovie }) => {\n  const [movie, getMovie] = useState(null);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={ClassNames(\n                'input',\n                { ' is-danger': movie === undefined },\n              )}\n\n            />\n          </div>\n\n          {\n            movie === undefined\n            && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                findMovie(document.getElementById('movie-title').value)\n                  .then((result) => {\n                    result.Response !== 'False'\n                      ? getMovie(\n                        {\n                          title: result.Title,\n                          description: result.Plot,\n                          imgUrl: result.Poster,\n                          imdbUrl:\n                          `https://www.imdb.com/title/${result.imdbID}/`,\n                          imdbId: result.imdbID,\n                        },\n                      )\n                      : getMovie(undefined);\n                  });\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addedMovie(movie);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {\n        !movie\n        || (\n          <div className=\"container\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...movie} />\n          </div>\n        )\n      }\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addedMovie: PropTypes.func.isRequired,\n};\n","const baseURL = 'https://www.omdbapi.com/?apikey=7c271956&t=';\n\nexport const findMovie = title => fetch(`${baseURL}${title}`)\n  .then(response => response.json());\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, addMovie] = useState(data);\n  const [errorMessage, toMessage] = useState(false);\n\n  const addedMovie = (newMovie) => {\n    if (!newMovie) {\n      return;\n    }\n\n    if (movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      toMessage(true);\n      setTimeout(() => {\n        toMessage(false);\n      }, 2000);\n\n      return;\n    }\n\n    addMovie([\n      ...movies,\n      newMovie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      {\n        !errorMessage\n        || (\n          <span className=\"error\">This movie is already in the list!</span>\n        )\n      }\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addedMovie={addedMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}